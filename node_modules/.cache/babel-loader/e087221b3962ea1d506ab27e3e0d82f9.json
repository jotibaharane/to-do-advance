{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import \"./Add.css\";\n// function Update(props) {\n//   const [title, setTitle] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [note, setNote] = useState(\"\");\n//   const { id } = useParams();\n//   console.log(id);\n//   const current = new Date();\n//   const dateh = `${current.getFullYear()}-${\n//     current.getMonth() + 1 < 10\n//       ? \"0\" + (current.getMonth() + 1)\n//       : current.getMonth() + 1\n//   }-${current.getDate() < 10 ? \"0\" + current.getDate() : current.getDate()}`;\n//   const yesterday = new Date(current);\n//   yesterday.setDate(yesterday.getDate() - 1);\n//   const yest = `${yesterday.getFullYear()}-${\n//     yesterday.getMonth() + 1 < 10\n//       ? \"0\" + (yesterday.getMonth() + 1)\n//       : yesterday.getMonth() + 1\n//   }-${\n//     yesterday.getDate() < 10 ? \"0\" + yesterday.getDate() : yesterday.getDate()\n//   }`;\n//   const tomorrow = new Date(current);\n//   tomorrow.setDate(tomorrow.getDate() + 1);\n//   const tom = `${tomorrow.getFullYear()}-${\n//     tomorrow.getMonth() + 1 < 10\n//       ? \"0\" + (tomorrow.getMonth() + 1)\n//       : tomorrow.getMonth() + 1\n//   }-${tomorrow.getDate() < 10 ? \"0\" + tomorrow.getDate() : tomorrow.getDate()}`;\n//   const nextWeek = new Date(current);\n//   nextWeek.setDate(nextWeek.getDate() + 7);\n//   const week = `${nextWeek.getFullYear()}-${\n//     nextWeek.getMonth() + 1 < 10\n//       ? \"0\" + (nextWeek.getMonth() + 1)\n//       : nextWeek.getMonth() + 1\n//   }-${nextWeek.getDate() < 10 ? \"0\" + nextWeek.getDate() : nextWeek.getDate()}`;\n//   const nextMonth = new Date(current);\n//   nextMonth.setMonth(nextMonth.getMonth() + 1);\n//   const month = `${nextMonth.getFullYear()}-${\n//     nextMonth.getMonth() + 1 < 10\n//       ? \"0\" + (nextMonth.getMonth() + 1)\n//       : nextMonth.getMonth() + 1\n//   }-${\n//     nextMonth.getDate() < 10 ? \"0\" + nextMonth.getDate() : nextMonth.getDate()\n//   }`;\n//   const dateChange = (day) => {\n//     if (day === \"today\") {\n//       setDate(dateh);\n//     } else if (day === \"yesterday\") {\n//       setDate(yest);\n//     } else if (day === \"tomorrow\") {\n//       setDate(tom);\n//     } else if (day === \"nextWeek\") {\n//       setDate(week);\n//     } else if (day === \"nextmonth\") {\n//       setDate(month);\n//     }\n//   };\n//   let fdata = \"\";\n//   const navigate = useNavigate();\n//   const values = () => {\n//     let data = \"\";\n//     if (title && date && note) {\n//       data = {\n//         id: Math.random().toString(),\n//         title: title,\n//         date: new Date(date),\n//         note: note,\n//       };\n//       props.setData((prevdata) => [...prevdata, data]);\n//       navigate(\"/\");\n//     } else {\n//       alert(\"All fields are mandetory,please enter data\");\n//     }\n//   };\n//   fdata = props.data.find((index) => index.id === id);\n//   console.log(fdata);\n//   // setDate(fdata[0].date);\n//   // setNote(fdata[0].note);\n//   // setTitle(fdata[0].title);\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         <div className=\"col-25\">\n//           <label htmlFor=\"Title\">Title</label>\n//         </div>\n//         <div className=\"col-75\">\n//           <input\n//             type=\"text\"\n//             className=\"Title\"\n//             name=\"Title\"\n//             onChange={(e) => setTitle(e.target.value)}\n//           />\n//         </div>\n//       </div>\n//       <div className=\"row\">\n//         <div className=\"col-25\">\n//           <label htmlFor=\"date\">Date</label>\n//         </div>\n//         <div className=\"col-75\">\n//           <input\n//             type=\"date\"\n//             className=\"date\"\n//             name=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//           />\n//         </div>\n//       </div>\n//       <div className=\"row\">\n//         <div className=\"col-25\">\n//           <label htmlFor=\"day\">Day</label>\n//         </div>\n//         <div className=\"col-75\">\n//           <select\n//             className=\"date-range form-control\"\n//             name=\"date\"\n//             onChange={(e) => dateChange(e.target.value)}\n//           >\n//             <option value=\"none\" checked disabled hidden>\n//               Select Date\n//             </option>\n//             <option value=\"yesterday\">Yesterday</option>\n//             <option select=\"true\" value=\"today\">\n//               Today\n//             </option>\n//             <option value=\"tomorrow\">Tomorrow</option>\n//             <option value=\"nextWeek\">Next Week</option>\n//             <option value=\"nextmonth\">Next Month</option>\n//           </select>\n//         </div>\n//       </div>\n//       <div className=\"row\">\n//         <div className=\"col-25\">\n//           <label htmlFor=\"Note\">Note</label>\n//         </div>\n//         <div className=\"col-75\">\n//           <textarea\n//             className=\"note\"\n//             name=\"subject\"\n//             placeholder=\"Write something..\"\n//             style={{ height: \"200px\" }}\n//             onChange={(e) => setNote(e.target.value)}\n//           />\n//         </div>\n//       </div>\n//       <div className=\"row\">\n//         <input\n//           type=\"button\"\n//           value=\"Update\"\n//           className=\"btn1\"\n//           onClick={() => {\n//             values();\n//           }}\n//         />\n//         <input\n//           type=\"button\"\n//           value=\"Cancel\"\n//           className=\"btn2\"\n//           onClick={() => navigate(\"/\")}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n// export default Update;","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/Update.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import \"./Add.css\";\r\n// function Update(props) {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [note, setNote] = useState(\"\");\r\n//   const { id } = useParams();\r\n//   console.log(id);\r\n//   const current = new Date();\r\n//   const dateh = `${current.getFullYear()}-${\r\n//     current.getMonth() + 1 < 10\r\n//       ? \"0\" + (current.getMonth() + 1)\r\n//       : current.getMonth() + 1\r\n//   }-${current.getDate() < 10 ? \"0\" + current.getDate() : current.getDate()}`;\r\n\r\n//   const yesterday = new Date(current);\r\n//   yesterday.setDate(yesterday.getDate() - 1);\r\n//   const yest = `${yesterday.getFullYear()}-${\r\n//     yesterday.getMonth() + 1 < 10\r\n//       ? \"0\" + (yesterday.getMonth() + 1)\r\n//       : yesterday.getMonth() + 1\r\n//   }-${\r\n//     yesterday.getDate() < 10 ? \"0\" + yesterday.getDate() : yesterday.getDate()\r\n//   }`;\r\n\r\n//   const tomorrow = new Date(current);\r\n//   tomorrow.setDate(tomorrow.getDate() + 1);\r\n//   const tom = `${tomorrow.getFullYear()}-${\r\n//     tomorrow.getMonth() + 1 < 10\r\n//       ? \"0\" + (tomorrow.getMonth() + 1)\r\n//       : tomorrow.getMonth() + 1\r\n//   }-${tomorrow.getDate() < 10 ? \"0\" + tomorrow.getDate() : tomorrow.getDate()}`;\r\n\r\n//   const nextWeek = new Date(current);\r\n//   nextWeek.setDate(nextWeek.getDate() + 7);\r\n//   const week = `${nextWeek.getFullYear()}-${\r\n//     nextWeek.getMonth() + 1 < 10\r\n//       ? \"0\" + (nextWeek.getMonth() + 1)\r\n//       : nextWeek.getMonth() + 1\r\n//   }-${nextWeek.getDate() < 10 ? \"0\" + nextWeek.getDate() : nextWeek.getDate()}`;\r\n\r\n//   const nextMonth = new Date(current);\r\n//   nextMonth.setMonth(nextMonth.getMonth() + 1);\r\n//   const month = `${nextMonth.getFullYear()}-${\r\n//     nextMonth.getMonth() + 1 < 10\r\n//       ? \"0\" + (nextMonth.getMonth() + 1)\r\n//       : nextMonth.getMonth() + 1\r\n//   }-${\r\n//     nextMonth.getDate() < 10 ? \"0\" + nextMonth.getDate() : nextMonth.getDate()\r\n//   }`;\r\n\r\n//   const dateChange = (day) => {\r\n//     if (day === \"today\") {\r\n//       setDate(dateh);\r\n//     } else if (day === \"yesterday\") {\r\n//       setDate(yest);\r\n//     } else if (day === \"tomorrow\") {\r\n//       setDate(tom);\r\n//     } else if (day === \"nextWeek\") {\r\n//       setDate(week);\r\n//     } else if (day === \"nextmonth\") {\r\n//       setDate(month);\r\n//     }\r\n//   };\r\n//   let fdata = \"\";\r\n//   const navigate = useNavigate();\r\n\r\n//   const values = () => {\r\n//     let data = \"\";\r\n//     if (title && date && note) {\r\n//       data = {\r\n//         id: Math.random().toString(),\r\n//         title: title,\r\n//         date: new Date(date),\r\n//         note: note,\r\n//       };\r\n//       props.setData((prevdata) => [...prevdata, data]);\r\n//       navigate(\"/\");\r\n//     } else {\r\n//       alert(\"All fields are mandetory,please enter data\");\r\n//     }\r\n//   };\r\n//   fdata = props.data.find((index) => index.id === id);\r\n//   console.log(fdata);\r\n//   // setDate(fdata[0].date);\r\n//   // setNote(fdata[0].note);\r\n//   // setTitle(fdata[0].title);\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"row\">\r\n//         <div className=\"col-25\">\r\n//           <label htmlFor=\"Title\">Title</label>\r\n//         </div>\r\n//         <div className=\"col-75\">\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"Title\"\r\n//             name=\"Title\"\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row\">\r\n//         <div className=\"col-25\">\r\n//           <label htmlFor=\"date\">Date</label>\r\n//         </div>\r\n//         <div className=\"col-75\">\r\n//           <input\r\n//             type=\"date\"\r\n//             className=\"date\"\r\n//             name=\"date\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row\">\r\n//         <div className=\"col-25\">\r\n//           <label htmlFor=\"day\">Day</label>\r\n//         </div>\r\n//         <div className=\"col-75\">\r\n//           <select\r\n//             className=\"date-range form-control\"\r\n//             name=\"date\"\r\n//             onChange={(e) => dateChange(e.target.value)}\r\n//           >\r\n//             <option value=\"none\" checked disabled hidden>\r\n//               Select Date\r\n//             </option>\r\n//             <option value=\"yesterday\">Yesterday</option>\r\n//             <option select=\"true\" value=\"today\">\r\n//               Today\r\n//             </option>\r\n//             <option value=\"tomorrow\">Tomorrow</option>\r\n//             <option value=\"nextWeek\">Next Week</option>\r\n//             <option value=\"nextmonth\">Next Month</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row\">\r\n//         <div className=\"col-25\">\r\n//           <label htmlFor=\"Note\">Note</label>\r\n//         </div>\r\n//         <div className=\"col-75\">\r\n//           <textarea\r\n//             className=\"note\"\r\n//             name=\"subject\"\r\n//             placeholder=\"Write something..\"\r\n//             style={{ height: \"200px\" }}\r\n//             onChange={(e) => setNote(e.target.value)}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row\">\r\n//         <input\r\n//           type=\"button\"\r\n//           value=\"Update\"\r\n//           className=\"btn1\"\r\n//           onClick={() => {\r\n//             values();\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"button\"\r\n//           value=\"Cancel\"\r\n//           className=\"btn2\"\r\n//           onClick={() => navigate(\"/\")}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Update;\r\n"]},"metadata":{},"sourceType":"module"}