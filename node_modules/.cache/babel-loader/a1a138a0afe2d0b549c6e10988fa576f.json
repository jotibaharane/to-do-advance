{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/to-do-list-adv/src/components/TaskBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"tippy.js/dist/tippy.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet chek = \"\";\n\nfunction TaskBoard(props) {\n  _s();\n\n  const [count, setCount] = useState(5);\n  const Navigate = useNavigate();\n  const item = props.data;\n\n  const checkbox = d => {\n    console.log(d.target.checked);\n\n    if (d.target.checked) {\n      setCount(count + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"taskLogo.png\",\n        alt: \"task-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Board \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Task\",\n        onClick: () => Navigate(\"/add\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Task-container\",\n      children: item.map(index => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          value: index,\n          setData: props.setData,\n          ...props,\n          fun: checkbox\n        }, index.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropup\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dropbtn count-btn\",\n          children: [\"Completed(\", count, \")\\u25B2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count\",\n            style: {\n              display: \"flex\",\n              padding: \"20px\"\n            },\n            onClick: () => setCount(0),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"delete.png\",\n              alt: \"delet\",\n              className: \"count-del\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBoard, \"zw8dWtb3VUnoSqtTEIw5Oy49xcQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TaskBoard;\nexport default TaskBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/TaskBoard.js"],"names":["React","useState","Card","useNavigate","chek","TaskBoard","props","count","setCount","Navigate","item","data","checkbox","d","console","log","target","checked","map","index","setData","id","display","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,yBAAP;;AACA,IAAIC,IAAI,GAAG,EAAX;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,IAAI,GAAGJ,KAAK,CAACK,IAAnB;;AACA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,OAArB;;AACA,QAAIJ,CAAC,CAACG,MAAF,CAASC,OAAb,EAAsB;AACpBT,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GALD;;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,OAAO,EAAE,MAAME,QAAQ,CAAC,MAAD;AAHzB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGC,IAAI,CAACQ,GAAL,CAAUC,KAAD,IAAW;AACnB,4BACE,QAAC,IAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,OAAO,EAAEb,KAAK,CAACc,OAHjB;AAAA,aAIMd,KAJN;AAKE,UAAA,GAAG,EAAEM;AALP,WACOO,KAAK,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF,eAuBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA,mCAAiDd,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,OADZ;AAEE,YAAA,KAAK,EAAE;AAAEe,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,OAAO,EAAE;AAA5B,aAFT;AAGE,YAAA,OAAO,EAAE,MAAMf,QAAQ,CAAC,CAAD,CAHzB;AAAA,oCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAK,cAAA,GAAG,EAAC,YAAT;AAAsB,cAAA,GAAG,EAAC,OAA1B;AAAkC,cAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAnDQH,S;UAEUF,W;;;KAFVE,S;AAqDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"tippy.js/dist/tippy.css\";\nlet chek = \"\";\nfunction TaskBoard(props) {\n  const [count, setCount] = useState(5);\n  const Navigate = useNavigate();\n  const item = props.data;\n  const checkbox = (d) => {\n    console.log(d.target.checked);\n    if (d.target.checked) {\n      setCount(count + 1);\n    }\n  };\n  return (\n    <div>\n      <div className=\"taskNav\">\n        <img src=\"taskLogo.png\" alt=\"task-logo\" />\n        <h1>Task Board </h1>\n        <input\n          type=\"button\"\n          value=\"Add Task\"\n          onClick={() => Navigate(\"/add\")}\n        />\n      </div>\n      <div className=\"Task-container\">\n        {item.map((index) => {\n          return (\n            <Card\n              key={index.id}\n              value={index}\n              setData={props.setData}\n              {...props}\n              fun={checkbox}\n            />\n          );\n        })}\n      </div>\n      <div className=\"bottom\">\n        <div className=\"dropup\">\n          <button className=\"dropbtn count-btn\">Completed({count})â–²</button>\n          <div className=\"dropup-content\">\n            <div\n              className=\"count\"\n              style={{ display: \"flex\", padding: \"20px\" }}\n              onClick={() => setCount(0)}\n            >\n              <p>Clear All</p>\n              <img src=\"delete.png\" alt=\"delet\" className=\"count-del\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskBoard;\n"]},"metadata":{},"sourceType":"module"}