{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/to-do-list-adv/src/components/UI/TaskBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskBoard(props) {\n  _s();\n\n  const Data = useRef();\n  const [count, setCount] = useState([]);\n  const Navigate = useNavigate();\n  Data.current = JSON.parse(localStorage.getItem(\"data\"));\n  Data.current = Data.current === null ? [] : Data.current;\n  let arr = [];\n  let old = JSON.parse(localStorage.getItem(\"count\"));\n\n  const checkbox = (e, id) => {\n    if (old) {\n      arr = old;\n    }\n\n    if (e.target.checked) {\n      setCount(count + 1);\n      let coun = Data.current.find(el => {\n        return el.id === id;\n      });\n      arr.push(coun);\n    }\n\n    setCount(arr);\n    localStorage.setItem(\"count\", JSON.stringify(arr));\n    const data = Data.current.filter(data => data.id !== id);\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  };\n\n  const clear = () => {\n    setCount([]);\n    localStorage.removeItem(\"count\");\n    Navigate(\"/\");\n  };\n\n  const dragEnd = result => {\n    console.log(result);\n    const items = [...Data.current];\n    const [orderproduct] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, orderproduct);\n    Data.current = items;\n    localStorage.setItem(\"data\", JSON.stringify(items));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"taskLogo.png\",\n        alt: \"task-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Board \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Task\",\n        onClick: () => Navigate(\"/add\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: dragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"productSequence\",\n        direction: \"horizontal\",\n        type: \"row\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Task-container\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: Data.current.map((index, id) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `draggable-${id}`,\n              index: id,\n              children: provided => /*#__PURE__*/_jsxDEV(\"span\", { ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ...provided.placeholder,\n                ref: provided.innerRef,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  value: index,\n                  data: Data.current,\n                  checkbox: checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, `draggable-${id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropup\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dropbtn count-btn\",\n          children: [\"Completed(\", count.length, \")\\u25B2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count\",\n            onClick: () => clear(),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"delete.png\",\n              alt: \"delet\",\n              className: \"count-del\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: \"none\"\n              },\n              children: count.map((index, id) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: index.title\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 39\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBoard, \"W9i2JqydFIrfuGm5/Tmat22qdGM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TaskBoard;\nexport default TaskBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/UI/TaskBoard.js"],"names":["React","useRef","useState","Card","useNavigate","ToastContainer","toast","DragDropContext","Droppable","Draggable","TaskBoard","props","Data","count","setCount","Navigate","current","JSON","parse","localStorage","getItem","arr","old","checkbox","e","id","target","checked","coun","find","el","push","setItem","stringify","data","filter","clear","removeItem","dragEnd","result","console","log","items","orderproduct","splice","source","index","destination","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","placeholder","length","listStyleType","title"],"mappings":"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","sourcesContent":["import React, {  useRef, useState} from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {DragDropContext,Droppable} from \"react-beautiful-dnd\"\nimport { Draggable } from \"react-beautiful-dnd\";\n\n\n\n\n\n\nfunction TaskBoard(props) {\nconst Data=useRef()\nconst [count,setCount]=useState([])\nconst Navigate = useNavigate();\n  Data.current = JSON.parse(localStorage.getItem(\"data\"))\n  Data.current=Data.current===null?[]:Data.current;\n  \n  \n  let arr=[]\n  let old=JSON.parse(localStorage.getItem(\"count\"))\n  const checkbox = (e, id) => {\n    \n    if(old)\n    {\n      arr=old\n    }\n    if (e.target.checked) {\n      setCount(count+1)\n      let coun=Data.current.find((el)=>{\n          return el.id===id\n      }\n      )\n      arr.push(coun)\n    }\n    setCount(arr)\n    localStorage.setItem(\"count\",JSON.stringify(arr))\n      const data =Data.current.filter((data) => data.id !== id);\n      localStorage.setItem(\"data\", JSON.stringify(data))\n\n     \n    }\n\n    const clear=()=>{\n            setCount([])\n            localStorage.removeItem(\"count\")\n            Navigate(\"/\")\n    }\n\nconst dragEnd=(result)=>{\nconsole.log(result);\nconst items=[...Data.current]\nconst [orderproduct]=items.splice(result.source.index,1)\nitems.splice(result.destination.index,0,orderproduct)\nData.current=items\nlocalStorage.setItem(\"data\",JSON.stringify(items))\n}\n\n \n\n\n\n  return (\n    <div className=\"card\">\n      <div className=\"taskNav\">\n        <img src=\"taskLogo.png\" alt=\"task-logo\" />\n        <h1>Task Board </h1>\n        <input\n          type=\"button\"\n          value=\"Add Task\"\n          onClick={() => Navigate(\"/add\")}\n        />\n      </div>\n    \n      <DragDropContext onDragEnd={dragEnd}>\n      <Droppable\n      droppableId=\"productSequence\"\n      direction=\"horizontal\"\n      type=\"row\"\n      >\n      {(provided)=>(\n      <div \n     className=\"Task-container\"\n      {...provided.droppableProps}\n      ref={provided.innerRef}\n     \n      >\n        {\n          Data.current.map((index,id) => {\n            return (\n              <Draggable\n              draggableId={`draggable-${id}`}\n              key={`draggable-${id}`}\n              index={id}\n              >{(provided)=>(\n                <span\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                {...provided.placeholder}\n                ref={provided.innerRef}\n                \n                >\n              <Card\n                value={index}\n                data={Data.current}\n                checkbox={checkbox}\n              />\n              </span>\n              )\n              }\n              </Draggable>\n            );\n          })\n        }\n        </div>\n      )  \n      }\n        </Droppable>\n        </DragDropContext>\n     \n      <div className=\"bottom\">\n          <div className=\"dropup\">\n          <button className=\"dropbtn count-btn\">Completed({count.length})▲</button>\n          <div className=\"dropup-content\">\n            <div\n              className=\"count\"\n              onClick={() =>clear()}>\n              <p>Clear All</p>\n              <img src=\"delete.png\" alt=\"delet\" className=\"count-del\" />\n              <ul style={{listStyleType:\"none\"}}>\n              { count.map((index,id)=><li key={id}>{index.title}</li> )\n              }\n              </ul>\n             \n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\nexport default TaskBoard;\n"]},"metadata":{},"sourceType":"module"}