{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/to-do-list-adv/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Date from \"./Date\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [list, setList] = useState(props.data);\n  const [dragging, setDragging] = useState(false);\n  const navigate = useNavigate();\n  const value = props.value;\n\n  const deleteValue = id => {\n    const dataM = props.data.filter(data => data.id !== id);\n    props.setData(dataM);\n  };\n\n  const editItem = id => {\n    props.setTogal(false);\n    navigate(`/add/${id}`);\n  };\n\n  useEffect(() => {\n    setList(props.data);\n  }, [setList, props.data]);\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n\n  const handletDragStart = (e, item) => {\n    console.log(\"Starting to drag\", item);\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = item;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, targetItem) => {\n    console.log(\"Entering a drag target\", targetItem);\n\n    if (dragItemNode.current !== e.target) {\n      console.log(\"Target is NOT the same as dragged item\");\n      setList(oldList => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0]);\n        dragItem.current = targetItem;\n        localStorage.setItem(\"List\", JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n\n  const handleDragEnd = e => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItemNode.current = null;\n  };\n\n  const getStyles = item => {\n    if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\n      return \"dnd-item current\";\n    }\n\n    return \"dnd-item\";\n  };\n\n  if (list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-n-drop\",\n      children: list.map((grp, grpI) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragEnter: dragging && !grp.items.length ? e => handleDragEnter(e, {\n          grpI,\n          itemI: 0\n        }) : null,\n        className: \"dnd-group\",\n        children: grp.items.map((item, itemI) => /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: true,\n          onDragStart: e => handletDragStart(e, {\n            grpI,\n            itemI\n          }),\n          onDragEnter: dragging ? e => {\n            handleDragEnter(e, {\n              grpI,\n              itemI\n            });\n          } : null,\n          className: dragging ? getStyles({\n            grpI,\n            itemI\n          }) : \"dnd-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => props.fun(e, value.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(Date, {\n                date: value.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: value.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"edit.jpeg\",\n              alt: \"edit\",\n              className: \"edit\",\n              onClick: () => editItem(value.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"delete.png\",\n              alt: \"delete\",\n              className: \"delete\",\n              onClick: () => deleteValue(value.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, grp.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  } // return (\n  //   <div className=\"test\" >\n  //     <input type=\"checkbox\" onChange={(e) => props.fun(e, value.id)} />\n  //     <h4>\n  //       <Date date={value.date} />\n  //     </h4>\n  //     <p>{value.title}</p>\n  //     <img\n  //       src=\"edit.jpeg\"\n  //       alt=\"edit\"\n  //       className=\"edit\"\n  //       onClick={() => editItem(value.id)}\n  //     />\n  //     <img\n  //       src=\"delete.png\"\n  //       alt=\"delete\"\n  //       className=\"delete\"\n  //       onClick={() => deleteValue(value.id)}\n  //     />\n  //   </div>\n  // );\n\n}\n\n_s(Card, \"05aFxDA6lp3njjekNe0tyE/AZIY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/Card.js"],"names":["React","useState","useEffect","useRef","Date","useNavigate","Card","props","list","setList","data","dragging","setDragging","navigate","value","deleteValue","id","dataM","filter","setData","editItem","setTogal","dragItem","dragItemNode","handletDragStart","e","item","console","log","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","targetItem","oldList","newList","JSON","parse","stringify","grpI","items","splice","itemI","localStorage","setItem","removeEventListener","getStyles","map","grp","length","fun","date","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Date from \"./Date\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Card(props) {\n  const [list, setList] = useState(props.data);\n  const [dragging, setDragging] = useState(false);\n\n  const navigate = useNavigate();\n  const value = props.value;\n  const deleteValue = (id) => {\n    const dataM = props.data.filter((data) => data.id !== id);\n    props.setData(dataM);\n  };\n  const editItem = (id) => {\n    props.setTogal(false);\n    navigate(`/add/${id}`);\n  };\n\n  useEffect(() => {\n    setList(props.data);\n  }, [setList, props.data]);\n\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n\n  const handletDragStart = (e, item) => {\n    console.log(\"Starting to drag\", item);\n\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = item;\n\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, targetItem) => {\n    console.log(\"Entering a drag target\", targetItem);\n    if (dragItemNode.current !== e.target) {\n      console.log(\"Target is NOT the same as dragged item\");\n      setList((oldList) => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(\n          targetItem.itemI,\n          0,\n          newList[dragItem.current.grpI].items.splice(\n            dragItem.current.itemI,\n            1\n          )[0]\n        );\n        dragItem.current = targetItem;\n        localStorage.setItem(\"List\", JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n\n  const handleDragEnd = (e) => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItemNode.current = null;\n  };\n\n  const getStyles = (item) => {\n    if (\n      dragItem.current.grpI === item.grpI &&\n      dragItem.current.itemI === item.itemI\n    ) {\n      return \"dnd-item current\";\n    }\n    return \"dnd-item\";\n  };\n\n  if (list) {\n    return (\n      <div className=\"drag-n-drop\">\n        {list.map((grp, grpI) => (\n          <div\n            key={grp.title}\n            onDragEnter={\n              dragging && !grp.items.length\n                ? (e) => handleDragEnter(e, { grpI, itemI: 0 })\n                : null\n            }\n            className=\"dnd-group\"\n          >\n            {grp.items.map((item, itemI) => (\n              <div\n                draggable\n                key={item}\n                onDragStart={(e) => handletDragStart(e, { grpI, itemI })}\n                onDragEnter={\n                  dragging\n                    ? (e) => {\n                        handleDragEnter(e, { grpI, itemI });\n                      }\n                    : null\n                }\n                className={dragging ? getStyles({ grpI, itemI }) : \"dnd-item\"}\n              >\n                <div className=\"test\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(e) => props.fun(e, value.id)}\n                  />\n                  <h4>\n                    <Date date={value.date} />\n                  </h4>\n                  <p>{value.title}</p>\n                  <img\n                    src=\"edit.jpeg\"\n                    alt=\"edit\"\n                    className=\"edit\"\n                    onClick={() => editItem(value.id)}\n                  />\n                  <img\n                    src=\"delete.png\"\n                    alt=\"delete\"\n                    className=\"delete\"\n                    onClick={() => deleteValue(value.id)}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return null;\n  }\n\n  // return (\n  //   <div className=\"test\" >\n  //     <input type=\"checkbox\" onChange={(e) => props.fun(e, value.id)} />\n  //     <h4>\n  //       <Date date={value.date} />\n  //     </h4>\n  //     <p>{value.title}</p>\n  //     <img\n  //       src=\"edit.jpeg\"\n  //       alt=\"edit\"\n  //       className=\"edit\"\n  //       onClick={() => editItem(value.id)}\n  //     />\n  //     <img\n  //       src=\"delete.png\"\n  //       alt=\"delete\"\n  //       className=\"delete\"\n  //       onClick={() => deleteValue(value.id)}\n  //     />\n  //   </div>\n  // );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}