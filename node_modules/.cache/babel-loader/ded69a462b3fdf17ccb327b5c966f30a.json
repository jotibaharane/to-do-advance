{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/to-do-list-adv/src/components/UI/TaskBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskBoard(props) {\n  _s();\n\n  const Data = useRef();\n  const [count, setCount] = useState([]);\n  const Navigate = useNavigate();\n  Data.current = JSON.parse(localStorage.getItem(\"data\"));\n  Data.current = Data.current === null ? [] : Data.current;\n  let arr = [];\n  let old = JSON.parse(localStorage.getItem(\"count\"));\n\n  const checkbox = (e, id) => {\n    if (old) {\n      arr = old;\n    }\n\n    if (e.target.checked) {\n      setCount(count + 1);\n      let coun = Data.current.find(el => {\n        return el.id === id;\n      });\n      arr.push(coun);\n    }\n\n    setCount(arr);\n    localStorage.setItem(\"count\", JSON.stringify(arr));\n    const data = Data.current.filter(data => data.id !== id);\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  };\n\n  const clear = () => {\n    setCount([]);\n    localStorage.removeItem(\"count\");\n    Navigate(\"/\");\n  };\n\n  const dragEnd = result => {\n    console.log(result);\n    const items = [...Data.current];\n    const [orderproduct] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, orderproduct);\n    Data.current = items;\n    localStorage.setItem(\"data\", JSON.stringify(items));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"taskLogo.png\",\n        alt: \"task-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Board \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Task\",\n        onClick: () => Navigate(\"/add\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: dragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"productSequence\",\n        direction: \"horizontal\",\n        type: \"row\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Task-container\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: Data.current.map((index, id) => {\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `draggable-${id}`,\n              index: id,\n              children: provided => /*#__PURE__*/_jsxDEV(\"span\", { ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                ...provided.placeholder,\n                ref: provided.innerRef,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  value: index,\n                  data: Data.current,\n                  checkbox: checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this)\n            }, `draggable-${id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropup\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dropbtn count-btn\",\n          children: [\"Completed(\", count.length, \")\\u25B2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count\",\n            onClick: () => clear(),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"delete.png\",\n              alt: \"delet\",\n              className: \"count-del\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyleType: \"none\"\n              },\n              children: count.map((index, id) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: index.title\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskBoard, \"xU2Bvi0zq5VjqSte9qPoR97x9Fo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TaskBoard;\nexport default TaskBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/UI/TaskBoard.js"],"names":["React","useRef","useState","Card","useNavigate","DragDropContext","Droppable","Draggable","TaskBoard","props","Data","count","setCount","Navigate","current","JSON","parse","localStorage","getItem","arr","old","checkbox","e","id","target","checked","coun","find","el","push","setItem","stringify","data","filter","clear","removeItem","dragEnd","result","console","log","items","orderproduct","splice","source","index","destination","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","placeholder","length","listStyleType","title"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./TaskBoard.css\";\nimport Card from \"./Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nfunction TaskBoard(props) {\n  const Data = useRef();\n  const [count, setCount] = useState([]);\n  const Navigate = useNavigate();\n  Data.current = JSON.parse(localStorage.getItem(\"data\"));\n  Data.current = Data.current === null ? [] : Data.current;\n\n  let arr = [];\n  let old = JSON.parse(localStorage.getItem(\"count\"));\n  const checkbox = (e, id) => {\n    if (old) {\n      arr = old;\n    }\n    if (e.target.checked) {\n      setCount(count + 1);\n      let coun = Data.current.find((el) => {\n        return el.id === id;\n      });\n      arr.push(coun);\n    }\n    setCount(arr);\n    localStorage.setItem(\"count\", JSON.stringify(arr));\n    const data = Data.current.filter((data) => data.id !== id);\n    localStorage.setItem(\"data\", JSON.stringify(data));\n  };\n\n  const clear = () => {\n    setCount([]);\n    localStorage.removeItem(\"count\");\n    Navigate(\"/\");\n  };\n\n  const dragEnd = (result) => {\n    console.log(result);\n    const items = [...Data.current];\n    const [orderproduct] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, orderproduct);\n    Data.current = items;\n    localStorage.setItem(\"data\", JSON.stringify(items));\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"taskNav\">\n        <img src=\"taskLogo.png\" alt=\"task-logo\" />\n        <h1>Task Board </h1>\n        <input\n          type=\"button\"\n          value=\"Add Task\"\n          onClick={() => Navigate(\"/add\")}\n        />\n      </div>\n\n      <DragDropContext onDragEnd={dragEnd}>\n        <Droppable\n          droppableId=\"productSequence\"\n          direction=\"horizontal\"\n          type=\"row\"\n        >\n          {(provided) => (\n            <div\n              className=\"Task-container\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {Data.current.map((index, id) => {\n                return (\n                  <Draggable\n                    draggableId={`draggable-${id}`}\n                    key={`draggable-${id}`}\n                    index={id}\n                  >\n                    {(provided) => (\n                      <span\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        {...provided.placeholder}\n                        ref={provided.innerRef}\n                      >\n                        <Card\n                          value={index}\n                          data={Data.current}\n                          checkbox={checkbox}\n                        />\n                      </span>\n                    )}\n                  </Draggable>\n                );\n              })}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <div className=\"bottom\">\n        <div className=\"dropup\">\n          <button className=\"dropbtn count-btn\">\n            Completed({count.length})▲\n          </button>\n          <div className=\"dropup-content\">\n            <div className=\"count\" onClick={() => clear()}>\n              <p>Clear All</p>\n              <img src=\"delete.png\" alt=\"delet\" className=\"count-del\" />\n              <ul style={{ listStyleType: \"none\" }}>\n                {count.map((index, id) => (\n                  <li key={id}>{index.title}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\nexport default TaskBoard;\n"]},"metadata":{},"sourceType":"module"}