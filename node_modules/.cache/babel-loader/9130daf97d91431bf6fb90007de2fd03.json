{"ast":null,"code":"var _jsxFileName = \"/home/am-pc-61/jotiba/to-do-list-adv/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Date from \"./Date\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [list, setList] = useState(props.data);\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    setList(props.data);\n  }, [setList, props.data]);\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n\n  const handletDragStart = (e, item) => {\n    console.log('Starting to drag', item);\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener('dragend', handleDragEnd);\n    dragItem.current = item;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, targetItem) => {\n    console.log('Entering a drag target', targetItem);\n\n    if (dragItemNode.current !== e.target) {\n      console.log('Target is NOT the same as dragged item');\n      setList(oldList => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0]);\n        dragItem.current = targetItem;\n        localStorage.setItem('List', JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n\n  const handleDragEnd = e => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItemNode.current = null;\n  };\n\n  const getStyles = item => {\n    if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\n      return \"dnd-item current\";\n    }\n\n    return \"dnd-item\";\n  };\n\n  if (list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-n-drop\",\n      children: list.map((grp, grpI) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragEnter: dragging && !grp.items.length ? e => handleDragEnter(e, {\n          grpI,\n          itemI: 0\n        }) : null,\n        className: \"dnd-group\",\n        children: grp.items.map((item, itemI) => /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: true,\n          onDragStart: e => handletDragStart(e, {\n            grpI,\n            itemI\n          }),\n          onDragEnter: dragging ? e => {\n            handleDragEnter(e, {\n              grpI,\n              itemI\n            });\n          } : null,\n          className: dragging ? getStyles({\n            grpI,\n            itemI\n          }) : \"dnd-item\",\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, grp.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n\n  const navigate = useNavigate();\n  const value = props.value;\n\n  const deleteValue = id => {\n    const dataM = props.data.filter(data => data.id !== id);\n    props.setData(dataM);\n  };\n\n  const editItem = id => {\n    props.setTogal(false);\n    navigate(`/add/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: e => props.fun(e, value.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(Date, {\n        date: value.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: value.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"edit.jpeg\",\n      alt: \"edit\",\n      className: \"edit\",\n      onClick: () => editItem(value.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"delete.png\",\n      alt: \"delete\",\n      className: \"delete\",\n      onClick: () => deleteValue(value.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"gyxC7EDktt7vXWu5Htsh9lfdoEk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/am-pc-61/jotiba/to-do-list-adv/src/components/Card.js"],"names":["React","useState","useEffect","useRef","Date","useNavigate","Card","props","list","setList","data","dragging","setDragging","dragItem","dragItemNode","handletDragStart","e","item","console","log","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","targetItem","oldList","newList","JSON","parse","stringify","grpI","items","splice","itemI","localStorage","setItem","removeEventListener","getStyles","map","grp","length","title","navigate","value","deleteValue","id","dataM","filter","setData","editItem","setTogal","fun","date"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport Date from \"./Date\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Card(props) {\n  const [list, setList] = useState(props.data); \n  const [dragging, setDragging] = useState(false);\n\n  useEffect(() => {\n    setList(props.data);\n}, [setList, props.data])\n\nconst dragItem = useRef();\nconst dragItemNode = useRef();\n\n\nconst handletDragStart = (e, item) => {\n  console.log('Starting to drag', item)\n\n  dragItemNode.current = e.target;\n  dragItemNode.current.addEventListener('dragend', handleDragEnd)\n  dragItem.current = item;\n\n  setTimeout(() => {\n      setDragging(true); \n  },0)       \n}\n\nconst handleDragEnter = (e, targetItem) => {\n  console.log('Entering a drag target', targetItem)\n  if (dragItemNode.current !== e.target) {\n      console.log('Target is NOT the same as dragged item')\n      setList(oldList => {\n          let newList = JSON.parse(JSON.stringify(oldList))\n          newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI,1)[0])\n          dragItem.current = targetItem;\n          localStorage.setItem('List', JSON.stringify(newList));\n          return newList\n      })\n  }\n}\n\nconst handleDragEnd = (e) => {\n  setDragging(false);\n  dragItem.current = null;\n  dragItemNode.current.removeEventListener('dragend', handleDragEnd)\n  dragItemNode.current = null;\n}\n\n\nconst getStyles = (item) => {\n  if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\n      return \"dnd-item current\"\n  }\n  return \"dnd-item\"\n}\n\n\nif (list) {\n  return (                \n      <div className=\"drag-n-drop\">\n      {list.map((grp, grpI) => (\n        <div key={grp.title} onDragEnter={dragging && !grp.items.length?(e) => handleDragEnter(e,{grpI, itemI: 0}):null} className=\"dnd-group\">\n          {grp.items.map((item, itemI) => (\n            <div draggable key={item}  onDragStart={(e) => handletDragStart(e, {grpI, itemI})} onDragEnter={dragging?(e) => {handleDragEnter(e, {grpI, itemI})}:null} className={dragging?getStyles({grpI, itemI}):\"dnd-item\"}>\n              {item}\n            </div>\n          ))}\n        </div>\n      ))}\n      </div>\n  )\n} else { return null}\n\n  const navigate = useNavigate();\n  const value = props.value;\n  const deleteValue = (id) => {\n    const dataM = props.data.filter((data) => data.id !== id);\n    props.setData(dataM);\n  };\n  const editItem = (id) => {\n    props.setTogal(false);\n    navigate(`/add/${id}`);\n  };\n\n  return (\n    <div className=\"test\" >\n      <input type=\"checkbox\" onChange={(e) => props.fun(e, value.id)} />\n      <h4>\n        <Date date={value.date} />\n      </h4>\n      <p>{value.title}</p>\n      <img\n        src=\"edit.jpeg\"\n        alt=\"edit\"\n        className=\"edit\"\n        onClick={() => editItem(value.id)}\n      />\n      <img\n        src=\"delete.png\"\n        alt=\"delete\"\n        className=\"delete\"\n        onClick={() => deleteValue(value.id)}\n      />\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}